<?xml version="1.0" encoding="ASCII"?>
<connectorconfiguration:ConnectorConfiguration xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:connectorconfiguration="http://wwww.bonitasoft.org/model/connector/configuration" xmlns:expression="http://www.bonitasoft.org/ns/studio/expression" xmlns:parameter="http://www.bonitasoft.org/ns/studio/parameter" definitionId="database-jdbc" version="1.0.0" name="jdbcConfiguration" modelVersion="7.2.0-002">
  <parameters key="driver">
    <expression xsi:type="expression:Expression" name="dbDriver" content="DROP TABLE IF EXISTS employee_leaves;&#xD;&#xA;DROP TABLE IF EXISTS employee_applicable_leaves;&#xD;&#xA;DROP TABLE IF EXISTS employees;&#xD;&#xA;DROP TABLE IF EXISTS leave_type;&#xD;&#xA;&#xD;&#xA;CREATE TABLE IF NOT EXISTS employees (&#xD;&#xA;  id int(10) NOT NULL AUTO_INCREMENT,&#xD;&#xA;  first_name varchar(255) NOT NULL,&#xD;&#xA;  last_name varchar(255),&#xD;&#xA;  email varchar(255),&#xD;&#xA;  phone varchar(255),&#xD;&#xA;  bonita_user_id varchar(255),&#xD;&#xA;  start_date date NULL,&#xD;&#xA;  created_date timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,&#xD;&#xA;  PRIMARY KEY (id)&#xD;&#xA;);&#xD;&#xA;&#xD;&#xA;CREATE TABLE IF NOT EXISTS leave_type (&#xD;&#xA;  id int(10)NOT NULL AUTO_INCREMENT,&#xD;&#xA;  type varchar(255) NOT NULL,&#xD;&#xA;  default_days_off int(10) NOT NULL,&#xD;&#xA;  PRIMARY KEY (id)&#xD;&#xA;);&#xD;&#xA;&#xD;&#xA;CREATE TABLE IF NOT EXISTS employee_leaves (&#xD;&#xA;  id int(10) NOT NULL AUTO_INCREMENT,&#xD;&#xA;  leave_type_id int(10) NOT NULL,&#xD;&#xA;  start_date date NOT NULL,&#xD;&#xA;  end_date date NOT NULL,&#xD;&#xA;  days_off int(10) NOT NULL,&#xD;&#xA;  employee_id int(10) NOT NULL,&#xD;&#xA;  status varchar(255) NOT NULL,&#xD;&#xA;  created_date timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,&#xD;&#xA;  PRIMARY KEY (id),&#xD;&#xA;  FOREIGN KEY (leave_type_id) REFERENCES leave_type(id)&#xD;&#xA;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;CREATE TABLE IF NOT EXISTS employee_applicable_leaves (&#xD;&#xA;  id int(10) NOT NULL AUTO_INCREMENT,&#xD;&#xA;  leave_type_id int(10) NOT NULL,&#xD;&#xA;  days_applicable int(10) NOT NULL,&#xD;&#xA;  employee_id int(10) NOT NULL,&#xD;&#xA;  PRIMARY KEY (id),&#xD;&#xA;  FOREIGN KEY (leave_type_id) REFERENCES leave_type(id)&#xD;&#xA;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;INSERT INTO leave_type (type, default_days_off ) values('Cong&#xe9;s pay&#xe9;s', 10);&#xD;&#xA;INSERT INTO leave_type (type, default_days_off) values('Cong&#xe9;s par anticipation', 20);&#xD;&#xA;&#xD;&#xA;INSERT INTO employee_leaves (leave_type_id, start_date, end_date, days_off, employee_id, status) values(1, '2013-1-1', '2013-1-3', 2, 1, 'Pending Approval');&#xD;&#xA;INSERT INTO employee_leaves (leave_type_id, start_date, end_date, days_off, employee_id, status) values(1, '2013-2-1', '2013-2-3', 2, 1, 'Pending Approval');&#xD;&#xA;INSERT INTO employee_leaves (leave_type_id, start_date, end_date, days_off, employee_id, status) values(2, '2013-3-1', '2013-3-3', 2, 1, 'Pending Approval');&#xD;&#xA;" returnTypeFixed="true">
      <referencedElements xsi:type="parameter:Parameter" name="dbDriver" value="" typeClassname="java.lang.String" description=""/>
    </expression>
  </parameters>
  <parameters key="url">
    <expression xsi:type="expression:Expression" name="dbUrl" content="DROP TABLE IF EXISTS employee_leaves;&#xD;&#xA;DROP TABLE IF EXISTS employee_applicable_leaves;&#xD;&#xA;DROP TABLE IF EXISTS employees;&#xD;&#xA;DROP TABLE IF EXISTS leave_type;&#xD;&#xA;&#xD;&#xA;CREATE TABLE IF NOT EXISTS employees (&#xD;&#xA;  id int(10) NOT NULL AUTO_INCREMENT,&#xD;&#xA;  first_name varchar(255) NOT NULL,&#xD;&#xA;  last_name varchar(255),&#xD;&#xA;  email varchar(255),&#xD;&#xA;  phone varchar(255),&#xD;&#xA;  bonita_user_id varchar(255),&#xD;&#xA;  start_date date NULL,&#xD;&#xA;  created_date timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,&#xD;&#xA;  PRIMARY KEY (id)&#xD;&#xA;);&#xD;&#xA;&#xD;&#xA;CREATE TABLE IF NOT EXISTS leave_type (&#xD;&#xA;  id int(10)NOT NULL AUTO_INCREMENT,&#xD;&#xA;  type varchar(255) NOT NULL,&#xD;&#xA;  default_days_off int(10) NOT NULL,&#xD;&#xA;  PRIMARY KEY (id)&#xD;&#xA;);&#xD;&#xA;&#xD;&#xA;CREATE TABLE IF NOT EXISTS employee_leaves (&#xD;&#xA;  id int(10) NOT NULL AUTO_INCREMENT,&#xD;&#xA;  leave_type_id int(10) NOT NULL,&#xD;&#xA;  start_date date NOT NULL,&#xD;&#xA;  end_date date NOT NULL,&#xD;&#xA;  days_off int(10) NOT NULL,&#xD;&#xA;  employee_id int(10) NOT NULL,&#xD;&#xA;  status varchar(255) NOT NULL,&#xD;&#xA;  created_date timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,&#xD;&#xA;  PRIMARY KEY (id),&#xD;&#xA;  FOREIGN KEY (leave_type_id) REFERENCES leave_type(id)&#xD;&#xA;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;CREATE TABLE IF NOT EXISTS employee_applicable_leaves (&#xD;&#xA;  id int(10) NOT NULL AUTO_INCREMENT,&#xD;&#xA;  leave_type_id int(10) NOT NULL,&#xD;&#xA;  days_applicable int(10) NOT NULL,&#xD;&#xA;  employee_id int(10) NOT NULL,&#xD;&#xA;  PRIMARY KEY (id),&#xD;&#xA;  FOREIGN KEY (leave_type_id) REFERENCES leave_type(id)&#xD;&#xA;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;INSERT INTO leave_type (type, default_days_off ) values('Cong&#xe9;s pay&#xe9;s', 10);&#xD;&#xA;INSERT INTO leave_type (type, default_days_off) values('Cong&#xe9;s par anticipation', 20);&#xD;&#xA;&#xD;&#xA;INSERT INTO employee_leaves (leave_type_id, start_date, end_date, days_off, employee_id, status) values(1, '2013-1-1', '2013-1-3', 2, 1, 'Pending Approval');&#xD;&#xA;INSERT INTO employee_leaves (leave_type_id, start_date, end_date, days_off, employee_id, status) values(1, '2013-2-1', '2013-2-3', 2, 1, 'Pending Approval');&#xD;&#xA;INSERT INTO employee_leaves (leave_type_id, start_date, end_date, days_off, employee_id, status) values(2, '2013-3-1', '2013-3-3', 2, 1, 'Pending Approval');&#xD;&#xA;" returnTypeFixed="true">
      <referencedElements xsi:type="parameter:Parameter" name="dbUrl" value="" typeClassname="java.lang.String" description=""/>
    </expression>
  </parameters>
  <parameters key="script">
    <expression xsi:type="expression:Expression" name="&lt;pattern-expression>" content="DROP TABLE IF EXISTS employee_leaves;&#xD;&#xA;DROP TABLE IF EXISTS employee_applicable_leaves;&#xD;&#xA;DROP TABLE IF EXISTS employees;&#xD;&#xA;DROP TABLE IF EXISTS leave_type;&#xD;&#xA;&#xD;&#xA;CREATE TABLE IF NOT EXISTS employees (&#xD;&#xA;  id int(10) NOT NULL AUTO_INCREMENT,&#xD;&#xA;  first_name varchar(255) NOT NULL,&#xD;&#xA;  last_name varchar(255),&#xD;&#xA;  email varchar(255),&#xD;&#xA;  phone varchar(255),&#xD;&#xA;  bonita_user_id varchar(255),&#xD;&#xA;  start_date date NULL,&#xD;&#xA;  created_date timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,&#xD;&#xA;  PRIMARY KEY (id)&#xD;&#xA;);&#xD;&#xA;&#xD;&#xA;CREATE TABLE IF NOT EXISTS leave_type (&#xD;&#xA;  id int(10)NOT NULL AUTO_INCREMENT,&#xD;&#xA;  type varchar(255) NOT NULL,&#xD;&#xA;  default_days_off int(10) NOT NULL,&#xD;&#xA;  PRIMARY KEY (id)&#xD;&#xA;);&#xD;&#xA;&#xD;&#xA;CREATE TABLE IF NOT EXISTS employee_leaves (&#xD;&#xA;  id int(10) NOT NULL AUTO_INCREMENT,&#xD;&#xA;  leave_type_id int(10) NOT NULL,&#xD;&#xA;  start_date date NOT NULL,&#xD;&#xA;  end_date date NOT NULL,&#xD;&#xA;  days_off int(10) NOT NULL,&#xD;&#xA;  employee_id int(10) NOT NULL,&#xD;&#xA;  status varchar(255) NOT NULL,&#xD;&#xA;  created_date timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,&#xD;&#xA;  PRIMARY KEY (id),&#xD;&#xA;  FOREIGN KEY (leave_type_id) REFERENCES leave_type(id)&#xD;&#xA;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;CREATE TABLE IF NOT EXISTS employee_applicable_leaves (&#xD;&#xA;  id int(10) NOT NULL AUTO_INCREMENT,&#xD;&#xA;  leave_type_id int(10) NOT NULL,&#xD;&#xA;  days_applicable int(10) NOT NULL,&#xD;&#xA;  employee_id int(10) NOT NULL,&#xD;&#xA;  PRIMARY KEY (id),&#xD;&#xA;  FOREIGN KEY (leave_type_id) REFERENCES leave_type(id)&#xD;&#xA;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;INSERT INTO leave_type (type, default_days_off ) values('Cong&#xe9;s pay&#xe9;s', 10);&#xD;&#xA;INSERT INTO leave_type (type, default_days_off) values('Cong&#xe9;s par anticipation', 20);&#xD;&#xA;&#xD;&#xA;INSERT INTO employee_leaves (leave_type_id, start_date, end_date, days_off, employee_id, status) values(1, '2013-1-1', '2013-1-3', 2, 1, 'Pending Approval');&#xD;&#xA;INSERT INTO employee_leaves (leave_type_id, start_date, end_date, days_off, employee_id, status) values(1, '2013-2-1', '2013-2-3', 2, 1, 'Pending Approval');&#xD;&#xA;INSERT INTO employee_leaves (leave_type_id, start_date, end_date, days_off, employee_id, status) values(2, '2013-3-1', '2013-3-3', 2, 1, 'Pending Approval');&#xD;&#xA;" type="TYPE_PATTERN" returnTypeFixed="true"/>
  </parameters>
  <parameters key="username">
    <expression xsi:type="expression:Expression" name="dbUsername" content="DROP TABLE IF EXISTS employee_leaves;&#xD;&#xA;DROP TABLE IF EXISTS employee_applicable_leaves;&#xD;&#xA;DROP TABLE IF EXISTS employees;&#xD;&#xA;DROP TABLE IF EXISTS leave_type;&#xD;&#xA;&#xD;&#xA;CREATE TABLE IF NOT EXISTS employees (&#xD;&#xA;  id int(10) NOT NULL AUTO_INCREMENT,&#xD;&#xA;  first_name varchar(255) NOT NULL,&#xD;&#xA;  last_name varchar(255),&#xD;&#xA;  email varchar(255),&#xD;&#xA;  phone varchar(255),&#xD;&#xA;  bonita_user_id varchar(255),&#xD;&#xA;  start_date date NULL,&#xD;&#xA;  created_date timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,&#xD;&#xA;  PRIMARY KEY (id)&#xD;&#xA;);&#xD;&#xA;&#xD;&#xA;CREATE TABLE IF NOT EXISTS leave_type (&#xD;&#xA;  id int(10)NOT NULL AUTO_INCREMENT,&#xD;&#xA;  type varchar(255) NOT NULL,&#xD;&#xA;  default_days_off int(10) NOT NULL,&#xD;&#xA;  PRIMARY KEY (id)&#xD;&#xA;);&#xD;&#xA;&#xD;&#xA;CREATE TABLE IF NOT EXISTS employee_leaves (&#xD;&#xA;  id int(10) NOT NULL AUTO_INCREMENT,&#xD;&#xA;  leave_type_id int(10) NOT NULL,&#xD;&#xA;  start_date date NOT NULL,&#xD;&#xA;  end_date date NOT NULL,&#xD;&#xA;  days_off int(10) NOT NULL,&#xD;&#xA;  employee_id int(10) NOT NULL,&#xD;&#xA;  status varchar(255) NOT NULL,&#xD;&#xA;  created_date timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,&#xD;&#xA;  PRIMARY KEY (id),&#xD;&#xA;  FOREIGN KEY (leave_type_id) REFERENCES leave_type(id)&#xD;&#xA;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;CREATE TABLE IF NOT EXISTS employee_applicable_leaves (&#xD;&#xA;  id int(10) NOT NULL AUTO_INCREMENT,&#xD;&#xA;  leave_type_id int(10) NOT NULL,&#xD;&#xA;  days_applicable int(10) NOT NULL,&#xD;&#xA;  employee_id int(10) NOT NULL,&#xD;&#xA;  PRIMARY KEY (id),&#xD;&#xA;  FOREIGN KEY (leave_type_id) REFERENCES leave_type(id)&#xD;&#xA;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;INSERT INTO leave_type (type, default_days_off ) values('Cong&#xe9;s pay&#xe9;s', 10);&#xD;&#xA;INSERT INTO leave_type (type, default_days_off) values('Cong&#xe9;s par anticipation', 20);&#xD;&#xA;&#xD;&#xA;INSERT INTO employee_leaves (leave_type_id, start_date, end_date, days_off, employee_id, status) values(1, '2013-1-1', '2013-1-3', 2, 1, 'Pending Approval');&#xD;&#xA;INSERT INTO employee_leaves (leave_type_id, start_date, end_date, days_off, employee_id, status) values(1, '2013-2-1', '2013-2-3', 2, 1, 'Pending Approval');&#xD;&#xA;INSERT INTO employee_leaves (leave_type_id, start_date, end_date, days_off, employee_id, status) values(2, '2013-3-1', '2013-3-3', 2, 1, 'Pending Approval');&#xD;&#xA;" returnTypeFixed="true">
      <referencedElements xsi:type="parameter:Parameter" name="dbUsername" value="" typeClassname="java.lang.String" description=""/>
    </expression>
  </parameters>
  <parameters key="password">
    <expression xsi:type="expression:Expression" name="dbPassword" content="DROP TABLE IF EXISTS employee_leaves;&#xD;&#xA;DROP TABLE IF EXISTS employee_applicable_leaves;&#xD;&#xA;DROP TABLE IF EXISTS employees;&#xD;&#xA;DROP TABLE IF EXISTS leave_type;&#xD;&#xA;&#xD;&#xA;CREATE TABLE IF NOT EXISTS employees (&#xD;&#xA;  id int(10) NOT NULL AUTO_INCREMENT,&#xD;&#xA;  first_name varchar(255) NOT NULL,&#xD;&#xA;  last_name varchar(255),&#xD;&#xA;  email varchar(255),&#xD;&#xA;  phone varchar(255),&#xD;&#xA;  bonita_user_id varchar(255),&#xD;&#xA;  start_date date NULL,&#xD;&#xA;  created_date timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,&#xD;&#xA;  PRIMARY KEY (id)&#xD;&#xA;);&#xD;&#xA;&#xD;&#xA;CREATE TABLE IF NOT EXISTS leave_type (&#xD;&#xA;  id int(10)NOT NULL AUTO_INCREMENT,&#xD;&#xA;  type varchar(255) NOT NULL,&#xD;&#xA;  default_days_off int(10) NOT NULL,&#xD;&#xA;  PRIMARY KEY (id)&#xD;&#xA;);&#xD;&#xA;&#xD;&#xA;CREATE TABLE IF NOT EXISTS employee_leaves (&#xD;&#xA;  id int(10) NOT NULL AUTO_INCREMENT,&#xD;&#xA;  leave_type_id int(10) NOT NULL,&#xD;&#xA;  start_date date NOT NULL,&#xD;&#xA;  end_date date NOT NULL,&#xD;&#xA;  days_off int(10) NOT NULL,&#xD;&#xA;  employee_id int(10) NOT NULL,&#xD;&#xA;  status varchar(255) NOT NULL,&#xD;&#xA;  created_date timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,&#xD;&#xA;  PRIMARY KEY (id),&#xD;&#xA;  FOREIGN KEY (leave_type_id) REFERENCES leave_type(id)&#xD;&#xA;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;CREATE TABLE IF NOT EXISTS employee_applicable_leaves (&#xD;&#xA;  id int(10) NOT NULL AUTO_INCREMENT,&#xD;&#xA;  leave_type_id int(10) NOT NULL,&#xD;&#xA;  days_applicable int(10) NOT NULL,&#xD;&#xA;  employee_id int(10) NOT NULL,&#xD;&#xA;  PRIMARY KEY (id),&#xD;&#xA;  FOREIGN KEY (leave_type_id) REFERENCES leave_type(id)&#xD;&#xA;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;INSERT INTO leave_type (type, default_days_off ) values('Cong&#xe9;s pay&#xe9;s', 10);&#xD;&#xA;INSERT INTO leave_type (type, default_days_off) values('Cong&#xe9;s par anticipation', 20);&#xD;&#xA;&#xD;&#xA;INSERT INTO employee_leaves (leave_type_id, start_date, end_date, days_off, employee_id, status) values(1, '2013-1-1', '2013-1-3', 2, 1, 'Pending Approval');&#xD;&#xA;INSERT INTO employee_leaves (leave_type_id, start_date, end_date, days_off, employee_id, status) values(1, '2013-2-1', '2013-2-3', 2, 1, 'Pending Approval');&#xD;&#xA;INSERT INTO employee_leaves (leave_type_id, start_date, end_date, days_off, employee_id, status) values(2, '2013-3-1', '2013-3-3', 2, 1, 'Pending Approval');&#xD;&#xA;" returnTypeFixed="true">
      <referencedElements xsi:type="parameter:Parameter" name="dbPassword" value="" typeClassname="java.lang.String" description=""/>
    </expression>
  </parameters>
  <parameters key="separator">
    <expression xsi:type="expression:Expression" name=";" content="DROP TABLE IF EXISTS employee_leaves;&#xD;&#xA;DROP TABLE IF EXISTS employee_applicable_leaves;&#xD;&#xA;DROP TABLE IF EXISTS employees;&#xD;&#xA;DROP TABLE IF EXISTS leave_type;&#xD;&#xA;&#xD;&#xA;CREATE TABLE IF NOT EXISTS employees (&#xD;&#xA;  id int(10) NOT NULL AUTO_INCREMENT,&#xD;&#xA;  first_name varchar(255) NOT NULL,&#xD;&#xA;  last_name varchar(255),&#xD;&#xA;  email varchar(255),&#xD;&#xA;  phone varchar(255),&#xD;&#xA;  bonita_user_id varchar(255),&#xD;&#xA;  start_date date NULL,&#xD;&#xA;  created_date timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,&#xD;&#xA;  PRIMARY KEY (id)&#xD;&#xA;);&#xD;&#xA;&#xD;&#xA;CREATE TABLE IF NOT EXISTS leave_type (&#xD;&#xA;  id int(10)NOT NULL AUTO_INCREMENT,&#xD;&#xA;  type varchar(255) NOT NULL,&#xD;&#xA;  default_days_off int(10) NOT NULL,&#xD;&#xA;  PRIMARY KEY (id)&#xD;&#xA;);&#xD;&#xA;&#xD;&#xA;CREATE TABLE IF NOT EXISTS employee_leaves (&#xD;&#xA;  id int(10) NOT NULL AUTO_INCREMENT,&#xD;&#xA;  leave_type_id int(10) NOT NULL,&#xD;&#xA;  start_date date NOT NULL,&#xD;&#xA;  end_date date NOT NULL,&#xD;&#xA;  days_off int(10) NOT NULL,&#xD;&#xA;  employee_id int(10) NOT NULL,&#xD;&#xA;  status varchar(255) NOT NULL,&#xD;&#xA;  created_date timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,&#xD;&#xA;  PRIMARY KEY (id),&#xD;&#xA;  FOREIGN KEY (leave_type_id) REFERENCES leave_type(id)&#xD;&#xA;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;CREATE TABLE IF NOT EXISTS employee_applicable_leaves (&#xD;&#xA;  id int(10) NOT NULL AUTO_INCREMENT,&#xD;&#xA;  leave_type_id int(10) NOT NULL,&#xD;&#xA;  days_applicable int(10) NOT NULL,&#xD;&#xA;  employee_id int(10) NOT NULL,&#xD;&#xA;  PRIMARY KEY (id),&#xD;&#xA;  FOREIGN KEY (leave_type_id) REFERENCES leave_type(id)&#xD;&#xA;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;INSERT INTO leave_type (type, default_days_off ) values('Cong&#xe9;s pay&#xe9;s', 10);&#xD;&#xA;INSERT INTO leave_type (type, default_days_off) values('Cong&#xe9;s par anticipation', 20);&#xD;&#xA;&#xD;&#xA;INSERT INTO employee_leaves (leave_type_id, start_date, end_date, days_off, employee_id, status) values(1, '2013-1-1', '2013-1-3', 2, 1, 'Pending Approval');&#xD;&#xA;INSERT INTO employee_leaves (leave_type_id, start_date, end_date, days_off, employee_id, status) values(1, '2013-2-1', '2013-2-3', 2, 1, 'Pending Approval');&#xD;&#xA;INSERT INTO employee_leaves (leave_type_id, start_date, end_date, days_off, employee_id, status) values(2, '2013-3-1', '2013-3-3', 2, 1, 'Pending Approval');&#xD;&#xA;" returnTypeFixed="true"/>
  </parameters>
</connectorconfiguration:ConnectorConfiguration>
